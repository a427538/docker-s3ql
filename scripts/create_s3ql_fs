#!/bin/sh
#
set -x
umask 0377
mkdir -p /root/.s3ql

if [ ! -f /root/.s3ql/authinfo2 ]; then
    echo "[swift]
    storage-url: ${S3QL_TYPE}://${S3QL_STORAGE}
    backend-login: ${S3QL_LOGIN}
    backend-password: ${S3QL_PASSWD}
    fs-passphrase: ${S3QL_FSPASSWD}" > /root/.s3ql/authinfo2
    cat /root/.s3ql/authinfo2
fi

#create container if it does not exist
if [ ! "x${SWIFT_AUTH_ENDPOINT}" = "x"]; then
    echo "Temporary" > temp
    swift -A ${SWIFT_AUTH_ENDPOINT} --insecure -U ${S3QL_LOGIN} -K ${S3QL_PASSWD} upload ${S3QL_STORAGE_CONTAINER} temp
    swift -A ${SWIFT_AUTH_ENDPOINT} --insecure -U ${S3QL_LOGIN} -K ${S3QL_PASSWD} delete ${S3QL_STORAGE_CONTAINER} temp
    rm temp
fi

mkdir -p ${S3QL_MOUNT_POINT}
echo fsck.s3ql ${S3QL_TYPE}://${S3QL_STORAGE}/${S3QL_STORAGE_CONTAINER}/${S3QL_STORAGE_FS}/
fsck.s3ql ${S3QL_TYPE}://${S3QL_STORAGE}/${S3QL_STORAGE_CONTAINER}/${S3QL_STORAGE_FS}/
signal=$?

if [ $signal -eq 18 ] ; then
        echo "filestem not in use"
        echo mkfs.s3ql --plain -L $S3QL_STORAGE_CONTAINER --max-obj-size 10240 ${S3QL_TYPE}://${S3QL_STORAGE}/${S3QL_STORAGE_CONTAINER}/${S3QL_STORAGE_FS}/
        mkfs.s3ql --plain -L $S3QL_STORAGE_CONTAINER --max-obj-size 10240 ${S3QL_TYPE}://${S3QL_STORAGE}/${S3QL_STORAGE_CONTAINER}/${S3QL_STORAGE_FS}/
elif [ $signal -ne 0 ] ; then
        echo "not safe to mount"
        exit 1
fi
echo mount.s3ql --log /root/.s3ql/mount.log --allow-other --compress zlib ${S3QL_TYPE}://${S3QL_STORAGE}/${S3QL_STORAGE_CONTAINER}/${S3QL_STORAGE_FS}/ ${S3QL_MOUNT_POINT}
mount.s3ql --log /root/.s3ql/mount.log --allow-other --compress zlib ${S3QL_TYPE}://${S3QL_STORAGE}/${S3QL_STORAGE_CONTAINER}/${S3QL_STORAGE_FS}/ ${S3QL_MOUNT_POINT}
